[user]
    name = Leif Wickland
    email = leifwickland@gmail.com
[core]
    editor = vim -X
	excludesfile = /Users/lwickland/.gitignore_global
    #pager = diff-so-fancy | less --tabs=4 -RFX
[alias]
    ; Laziness is a virtue; short aliases
    st = status
    ci = commit
    cm = commit --amend ; Typically used to change the previous commit's message.
    cA = commit --amend -C HEAD ; Commit, merging into the previous commit and reusing its message. Named based on fugitive analog.
    br = branch
    co = checkout
    pp = !echo "Pulling" && git pull && echo "" && echo "Pushing" && git push
    prp = !echo "Pulling" && git pull && echo "" && echo "Rebasing" && git rebase -i origin && echo "" && echo "Pushing" && git push

    listTrackedFiles = ls-tree -r --name-only HEAD

    ; Misc undo
    unstage=reset HEAD --
    revertToIndex=checkout --
    revertToHead=checkout HEAD
    revertLastCommit=revert HEAD
    lastCommitMessage=log -1 --pretty=%B # Stolen from http://stackoverflow.com/a/7293026/175251
    lastCommitFiles=show --pretty="format:" --name-only 
    removeFileFromLastCommit=!~/bin/gitRemoveFileFromLastCommit.sh

    ; So many ways to diff
    dall = diff --no-ext-diff
    d = diff --relative --no-ext-diff
    dv = diff --ext-diff
    df = diff --relative --no-ext-diff --name-only
    dfall = diff --no-ext-diff --name-only
    ds = diff --relative --no-ext-diff --name-status
    dsall = diff --no-ext-diff --name-status
    di = diff-index --color=auto --cached --patch --relative HEAD
    dfi = diff-index --color=auto --cached --name-only --relative HEAD
    diall = diff-index --color=auto --cached --patch HEAD
    dfiall = diff-index --color=auto --cached --name-only HEAD
    do = diff --relative --no-ext-diff origin/master..HEAD
    dvo = diff --ext-diff origin/master..HEAD
    dfo = diff --relative --no-ext-diff --name-only origin/master..HEAD
    dfallo = diff --no-ext-diff --name-only origin/master..HEAD
    dso = diff --relative --no-ext-diff --name-status origin/master..HEAD
    dsallo = diff --no-ext-diff --name-status origin/master..HEAD

    lg = log -p
    logtree = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --topo-order --date=relative
    logtreenocolor = log --graph --pretty=format:'%h -%d %s (%cr) <%an>' --abbrev-commit --topo-order --date=relative

    dryad = add -n . ; Oh, mythological puns, how you slay me.

    ; Rebase steps
    reb = rebase -i
    now = !export GIT_COMMITTER_DATE="$(date +%s)" && git commit --amend --date="$GIT_COMMITTER_DATE" -C HEAD
    con = rebase --continue

    ; Enable rebase on pull (instead of merge on pull) for the current checkout
    enableRebasePull = config branch.master.rebase true
[color]
    ui = auto
[branch]
    autosetuprebase = always ; When creating a clone, configure it to rebase on pull (instead of merge on pull).  Avoids merge commits.
[push]
    default = tracking ; Default to only pushing the current branch.  When I don't have to work with old version of get, this should become 'simple'.
[rerere]
    enabled = true
[tig]
    line-graphics = utf-8
